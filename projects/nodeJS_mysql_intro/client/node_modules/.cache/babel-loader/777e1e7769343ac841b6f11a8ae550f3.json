{"ast":null,"code":"var _jsxFileName = \"D:\\\\dergachev456\\\\training\\\\projects\\\\nodeJS_mysql_intro\\\\client\\\\src\\\\components\\\\CreateOrder.js\";\nimport React, { Component } from 'react';\nexport default class CreateOrder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cart: null,\n      totalPrice: null,\n      street: '',\n      number: '',\n      district: '',\n      country: '',\n      city: '',\n      promocode: '',\n      wasSended: false\n    };\n\n    this.handleStreet = event => {\n      this.setState({\n        street: event.target.value\n      });\n    };\n\n    this.handleNumber = event => {\n      this.setState({\n        number: event.target.value\n      });\n    };\n\n    this.handleDistrict = event => {\n      this.setState({\n        district: event.target.value\n      });\n    };\n\n    this.handleCountry = event => {\n      this.setState({\n        country: event.target.value\n      });\n    };\n\n    this.handleCity = event => {\n      this.setState({\n        city: event.target.value\n      });\n    };\n\n    this.handlePromocode = event => {\n      this.setState({\n        promocode: event.target.value\n      });\n    };\n\n    this.sendPromocode = () => {\n      fetch('http://localhost:8080/promocode', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          promocode: this.state.promocode\n        })\n      }).then(responce => responce.json()).then(data => {\n        let newPrice = this.state.totalPrice;\n        newPrice = newPrice * (100 / data.discount);\n        this.setState({\n          totalPrice: newPrice\n        });\n      }).catch(error => {// this.setState({ isError: true });\n      });\n    };\n\n    this.sendData = () => {\n      const user_data = localStorage.getItem('user_data');\n      console.log(user_data);\n      const user_id = JSON.parse(user_data).id;\n      console.log(user_id);\n      fetch('http://localhost:8080/create-order', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          address: {\n            street: this.state.street,\n            number: this.state.number,\n            district: this.state.district,\n            city: this.state.city,\n            country: this.state.country\n          },\n          user_id: user_id,\n          cart: this.state.cart,\n          totalPrice: this.state.totalPrice\n        })\n      });\n      this.setState({\n        wasSended: true\n      }); // this.props.history.push('')\n    };\n  }\n\n  componentDidMount() {\n    const cart = JSON.parse(localStorage.getItem(\"cart\"));\n    const totalPrice = JSON.parse(localStorage.getItem(\"totalPrice\"));\n    this.setState({\n      cart: cart,\n      totalPrice: totalPrice\n    });\n  }\n\n  render() {\n    if (this.state.cart && this.state.totalPrice) {\n      console.log(this.state.cart);\n      console.log(this.state.totalPrice);\n    }\n\n    return React.createElement(\"div\", {\n      className: \"create-order__container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, this.state.totalPrice && React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"promocode__container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"promocode__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Enter promocode\"), React.createElement(\"input\", {\n      onChange: this.handlePromocode,\n      className: \"promocode__input\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.sendPromocode,\n      className: \"promocode__button m_button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Check promocode\"), React.createElement(\"h2\", {\n      className: \"promocode__price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Total price: \", this.state.totalPrice, \" \\u20B4\"))), this.state.cart && !this.state.wasSended && React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"create-order\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"create-order__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Delivery address\"), React.createElement(\"span\", {\n      className: \"create-order__label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Your street\"), React.createElement(\"input\", {\n      onChange: this.handleStreet,\n      className: \"create-order__input\",\n      type: \"text\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"create-order__label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Number\"), React.createElement(\"input\", {\n      onChange: this.handleNumber,\n      className: \"create-order__input\",\n      type: \"text\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"create-order__label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"District\"), React.createElement(\"input\", {\n      onChange: this.handleDistrict,\n      className: \"create-order__input\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"create-order__label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Country\"), React.createElement(\"input\", {\n      onChange: this.handleCountry,\n      className: \"create-order__input\",\n      type: \"text\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"create-order__label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"City\"), React.createElement(\"input\", {\n      onChange: this.handleCity,\n      className: \"create-order__input\",\n      type: \"text\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.sendData,\n      className: \"create-order__button m_button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"\\u0421onfirm the order\"))));\n  }\n\n}","map":{"version":3,"sources":["D:/dergachev456/training/projects/nodeJS_mysql_intro/client/src/components/CreateOrder.js"],"names":["React","Component","CreateOrder","state","cart","totalPrice","street","number","district","country","city","promocode","wasSended","handleStreet","event","setState","target","value","handleNumber","handleDistrict","handleCountry","handleCity","handlePromocode","sendPromocode","fetch","method","headers","body","JSON","stringify","then","responce","json","data","newPrice","discount","catch","error","sendData","user_data","localStorage","getItem","console","log","user_id","parse","id","address","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nexport default class CreateOrder extends Component {\r\n    state = {\r\n        cart: null,\r\n        totalPrice: null,\r\n        street: '',\r\n        number: '',\r\n        district: '',\r\n        country: '',\r\n        city: '',\r\n        promocode: '',\r\n        wasSended: false\r\n    }\r\n    handleStreet = (event) => {\r\n        this.setState({ street: event.target.value });\r\n    }\r\n    handleNumber = (event) => {\r\n        this.setState({ number: event.target.value });\r\n    }\r\n    handleDistrict = (event) => {\r\n        this.setState({ district: event.target.value });\r\n    }\r\n    handleCountry = (event) => {\r\n        this.setState({ country: event.target.value });\r\n    }\r\n    handleCity = (event) => {\r\n        this.setState({ city: event.target.value });\r\n    }\r\n    handlePromocode = (event) => {\r\n        this.setState({ promocode: event.target.value});\r\n    }\r\n    componentDidMount() {\r\n        const cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n        const totalPrice = JSON.parse(localStorage.getItem(\"totalPrice\"))\r\n        this.setState({\r\n            cart: cart,\r\n            totalPrice: totalPrice\r\n        })\r\n    }\r\n    sendPromocode = () => {\r\n        fetch('http://localhost:8080/promocode', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                promocode: this.state.promocode\r\n            })\r\n        })\r\n        .then(responce => responce.json())\r\n        .then(data => {\r\n            let newPrice = this.state.totalPrice;\r\n            newPrice = newPrice * (100 / data.discount);\r\n            this.setState({totalPrice: newPrice})\r\n        })\r\n        .catch(error => {\r\n            // this.setState({ isError: true });\r\n        })\r\n    }\r\n    sendData = () => {\r\n        const user_data = localStorage.getItem('user_data');\r\n        console.log(user_data);\r\n\r\n        const user_id = JSON.parse(user_data).id;\r\n        console.log(user_id);\r\n\r\n        fetch('http://localhost:8080/create-order', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                address: {\r\n                    street: this.state.street,\r\n                    number: this.state.number,\r\n                    district: this.state.district,\r\n                    city: this.state.city,\r\n                    country: this.state.country\r\n                },\r\n                user_id: user_id,\r\n                cart: this.state.cart,\r\n                totalPrice: this.state.totalPrice\r\n            })\r\n        });\r\n        this.setState({ wasSended: true });\r\n        // this.props.history.push('')\r\n    }\r\n    render() {\r\n        if (this.state.cart && this.state.totalPrice) {\r\n            console.log(this.state.cart);\r\n            console.log(this.state.totalPrice);\r\n        }\r\n        return (\r\n            <div className=\"create-order__container\">\r\n                {\r\n                    this.state.totalPrice &&\r\n                    <React.Fragment>\r\n                        <div className=\"promocode__container\">\r\n                            <h3 className=\"promocode__title\">Enter promocode</h3>\r\n                            <input onChange={this.handlePromocode} className=\"promocode__input\" type=\"text\" />\r\n                            <button onClick={this.sendPromocode} className=\"promocode__button m_button\">Check promocode</button>\r\n                            <h2 className=\"promocode__price\">Total price: {this.state.totalPrice} &#8372;</h2>\r\n                        </div>\r\n                    </React.Fragment>\r\n\r\n                }\r\n                {\r\n                    this.state.cart && !this.state.wasSended && (\r\n                        <React.Fragment>\r\n                            <div className=\"create-order\">\r\n                                <h2 className=\"create-order__title\">Delivery address</h2>\r\n                                <span className=\"create-order__label\">Your street</span>\r\n                                <input onChange={this.handleStreet} className=\"create-order__input\" type=\"text\" required />\r\n                                <span className=\"create-order__label\">Number</span>\r\n                                <input onChange={this.handleNumber} className=\"create-order__input\" type=\"text\" required />\r\n                                <span className=\"create-order__label\">District</span>\r\n                                <input onChange={this.handleDistrict} className=\"create-order__input\" type=\"text\" />\r\n                                <span className=\"create-order__label\">Country</span>\r\n                                <input onChange={this.handleCountry} className=\"create-order__input\" type=\"text\" required />\r\n                                <span className=\"create-order__label\">City</span>\r\n                                <input onChange={this.handleCity} className=\"create-order__input\" type=\"text\" required />\r\n                                <button onClick={this.sendData} className=\"create-order__button m_button\">Сonfirm the order</button>\r\n                            </div>\r\n                        </React.Fragment>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}