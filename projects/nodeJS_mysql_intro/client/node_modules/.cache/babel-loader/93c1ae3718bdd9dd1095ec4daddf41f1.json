{"ast":null,"code":"var _jsxFileName = \"D:\\\\dergachev456\\\\training\\\\projects\\\\nodeJS_mysql_intro\\\\client\\\\src\\\\components\\\\Cart.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport trashIcon from '../icons/trash.png';\nexport default class Cart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: null,\n      cart: null,\n      totalPrice: null\n    };\n\n    this.removeProduct = id => {\n      const filterdCart = this.state.cart.filter(product => product.id !== id);\n      this.setState({\n        cart: filterdCart\n      });\n      localStorage.setItem('cart', JSON.stringify(filterdCart));\n    };\n  }\n\n  componentDidMount() {\n    let cart = JSON.parse(localStorage.getItem('cart'));\n    this.setState({\n      cart: cart\n    });\n    let total = 0;\n\n    try {\n      cart.forEach(product => {\n        total += product.price;\n      });\n    } catch (error) {}\n\n    this.setState({\n      totalPrice: total\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"cart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, this.state.cart && this.state.cart.map(product => {\n      return React.createElement(\"div\", {\n        key: product.id,\n        className: \"cart__product\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"/images/\".concat(product.path),\n        className: \"cart__img\",\n        alt: product.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(Link, {\n        className: \"cart__product-name\",\n        to: \"/product/\".concat(product.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, product.name), React.createElement(\"span\", {\n        className: \"cart__product-price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, product.price, \" \\u20B4\"), React.createElement(\"img\", {\n        onClick: () => {\n          this.removeProduct(product.id);\n        },\n        src: trashIcon,\n        className: \"cart__trash\",\n        alt: \"trash\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }));\n    }), this.state.totalPrice === 0 ? React.createElement(\"h2\", {\n      className: \"cart__total\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Your cart is empty\") : React.createElement(\"h2\", {\n      className: \"cart__total\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Total: \", this.state.totalPrice, \" \\u20B4\"));\n  }\n\n}","map":{"version":3,"sources":["D:/dergachev456/training/projects/nodeJS_mysql_intro/client/src/components/Cart.js"],"names":["React","Component","Link","trashIcon","Cart","state","products","cart","totalPrice","removeProduct","id","filterdCart","filter","product","setState","localStorage","setItem","JSON","stringify","componentDidMount","parse","getItem","total","forEach","price","error","render","map","path","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport trashIcon from '../icons/trash.png'\r\nexport default class Cart extends Component {\r\n    state = {\r\n        products: null,\r\n        cart: null,\r\n        totalPrice: null\r\n    }\r\n    componentDidMount() {\r\n        let cart = JSON.parse(localStorage.getItem('cart'));\r\n        this.setState({ cart: cart });\r\n        let total = 0;\r\n        try {\r\n            cart.forEach(product => {\r\n                total += product.price;\r\n            });\r\n        } catch (error) { }\r\n        this.setState({ totalPrice: total });\r\n    }\r\n    removeProduct = id => {\r\n        const filterdCart = this.state.cart.filter(product => product.id !== id );\r\n        this.setState({cart: filterdCart});\r\n        localStorage.setItem('cart', JSON.stringify(filterdCart));    \r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"cart\">\r\n                {\r\n                    this.state.cart && (\r\n                        this.state.cart.map(product => {\r\n                            return (\r\n                                <div key={product.id} className=\"cart__product\">\r\n                                    <img src={`/images/${product.path}`} className=\"cart__img\" alt={product.name} />\r\n                                    <Link className=\"cart__product-name\" to={`/product/${product.id}`}>{product.name}</Link>\r\n                                    <span className=\"cart__product-price\">{product.price} &#8372;</span>\r\n                                    <img onClick={() => {this.removeProduct(product.id)}} src={trashIcon} className=\"cart__trash\" alt=\"trash\" />\r\n                                </div>\r\n                            )\r\n                        })\r\n                    )\r\n                }\r\n                {\r\n                    (this.state.totalPrice === 0) ? (<h2 className=\"cart__total\">Your cart is empty</h2>) :\r\n                        (<h2 className=\"cart__total\">Total: {this.state.totalPrice} &#8372;</h2>)\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}