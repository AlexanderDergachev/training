{"ast":null,"code":"export function sortCart(arr) {// var counter = arr.reduce(function (o, i) {\n  //     if (!o.hasOwnProperty(Math.trunc(i.id))) {\n  //         o[Math.trunc(i.id)] = 0;\n  //     }\n  //     o[Math.trunc(i.id)]++;\n  //     console.log(o);\n  //     return o;\n  // }, {});\n  // var result = Object.keys(counter).map(function (id) {\n  //     return {\n  //         id: id,\n  //         name: counter.name,\n  //         sum: counter[id]\n  //     };\n  // });\n  // return result;\n}\nexport const getCountIds = arr => {\n  const result = new Object();\n  arr.forEach(item => result[item.id] ? result[item.id]++ : result[item.id] = 1);\n  return Object.keys(result).map(item => {\n    return {\n      id: parseInt(item),\n      sum: result[item]\n    };\n  });\n}; // console.log(getCountIds(arr))","map":{"version":3,"sources":["D:/dergachev456/training/projects/nodeJS_mysql_intro/client/src/sortLocalStorage.js"],"names":["sortCart","arr","getCountIds","result","Object","forEach","item","id","keys","map","parseInt","sum"],"mappings":"AAAA,OAAO,SAASA,QAAT,CAAkBC,GAAlB,EAAuB,CAC1B;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIH;AAED,OAAO,MAAMC,WAAW,GAAGD,GAAG,IAAI;AAC9B,QAAME,MAAM,GAAG,IAAIC,MAAJ,EAAf;AAEAH,EAAAA,GAAG,CAACI,OAAJ,CAAYC,IAAI,IAAIH,MAAM,CAACG,IAAI,CAACC,EAAN,CAAN,GAAkBJ,MAAM,CAACG,IAAI,CAACC,EAAN,CAAN,EAAlB,GAAsCJ,MAAM,CAACG,IAAI,CAACC,EAAN,CAAN,GAAkB,CAA5E;AAEA,SAAOH,MAAM,CAACI,IAAP,CAAYL,MAAZ,EAAoBM,GAApB,CAAwBH,IAAI,IAAI;AACnC,WAAO;AACHC,MAAAA,EAAE,EAAEG,QAAQ,CAACJ,IAAD,CADT;AAEHK,MAAAA,GAAG,EAAER,MAAM,CAACG,IAAD;AAFR,KAAP;AAIH,GALM,CAAP;AAMH,CAXM,C,CAaP","sourcesContent":["export function sortCart(arr) {\r\n    // var counter = arr.reduce(function (o, i) {\r\n    //     if (!o.hasOwnProperty(Math.trunc(i.id))) {\r\n    //         o[Math.trunc(i.id)] = 0;\r\n    //     }\r\n    //     o[Math.trunc(i.id)]++;\r\n    //     console.log(o);\r\n\r\n    //     return o;\r\n    // }, {});\r\n    // var result = Object.keys(counter).map(function (id) {\r\n    //     return {\r\n    //         id: id,\r\n    //         name: counter.name,\r\n    //         sum: counter[id]\r\n    //     };\r\n    // });\r\n    // return result;\r\n\r\n\r\n\r\n}\r\n\r\nexport const getCountIds = arr => {\r\n    const result = new Object\r\n\r\n    arr.forEach(item => result[item.id] ? result[item.id]++ : result[item.id] = 1)\r\n\r\n    return Object.keys(result).map(item => {\r\n        return {\r\n            id: parseInt(item),\r\n            sum: result[item]\r\n        }\r\n    })\r\n}\r\n\r\n// console.log(getCountIds(arr))"]},"metadata":{},"sourceType":"module"}