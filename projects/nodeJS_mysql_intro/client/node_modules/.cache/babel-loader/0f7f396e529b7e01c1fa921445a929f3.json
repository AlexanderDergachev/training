{"ast":null,"code":"var _jsxFileName = \"D:\\\\dergachev456\\\\training\\\\projects\\\\nodeJS_mysql_intro\\\\client\\\\src\\\\components\\\\CreateOrder.js\";\nimport React, { Component } from 'react';\nexport default class CreateOrder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cart: null,\n      totalPrice: null,\n      street: '',\n      number: '',\n      district: '',\n      country: '',\n      city: '',\n      promocode: '',\n      wasSended: false,\n      incorrectPromocode: false,\n      successPromocode: false\n    };\n\n    this.handleStreet = event => {\n      this.setState({\n        street: event.target.value\n      });\n    };\n\n    this.handleNumber = event => {\n      this.setState({\n        number: event.target.value\n      });\n    };\n\n    this.handleDistrict = event => {\n      this.setState({\n        district: event.target.value\n      });\n    };\n\n    this.handleCountry = event => {\n      this.setState({\n        country: event.target.value\n      });\n    };\n\n    this.handleCity = event => {\n      this.setState({\n        city: event.target.value\n      });\n    };\n\n    this.handlePromocode = event => {\n      this.setState({\n        promocode: event.target.value\n      });\n    };\n\n    this.sendPromocode = () => {\n      this.setState({\n        incorrectPromocode: false\n      });\n      fetch('http://localhost:8080/promocode', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          promocode: this.state.promocode\n        })\n      }).then(responce => responce.json()).then(data => {\n        let newPrice = this.state.totalPrice;\n        let discount = newPrice / 100 * data.discount;\n        newPrice = newPrice - discount;\n        this.setState({\n          totalPrice: newPrice\n        });\n        this.setState({\n          successPromocode: true\n        });\n      }).catch(error => {\n        this.setState({\n          incorrectPromocode: true\n        });\n      });\n    };\n\n    this.sendData = () => {\n      const user_data = localStorage.getItem('user_data');\n      const user_id = JSON.parse(user_data).id;\n      fetch('http://localhost:8080/create-order', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          address: {\n            street: this.state.street,\n            number: this.state.number,\n            district: this.state.district,\n            city: this.state.city,\n            country: this.state.country\n          },\n          user_id: user_id,\n          cart: this.state.cart,\n          totalPrice: this.state.totalPrice\n        })\n      });\n      this.setState({\n        wasSended: true\n      });\n      localStorage.setItem('cart', JSON.stringify([]));\n    };\n  }\n\n  componentDidMount() {\n    let token = localStorage.getItem('token');\n    let data = \"Bearer \".concat(token);\n    fetch('http://localhost:8080/check-auth', {\n      headers: {\n        Authorization: data\n      }\n    }).then(responce => console.log(responce)).catch(error => {\n      this.props.history.push('/login');\n    });\n    const cart = JSON.parse(localStorage.getItem(\"cart\"));\n    const totalPrice = JSON.parse(localStorage.getItem(\"totalPrice\"));\n    this.setState({\n      cart: cart,\n      totalPrice: totalPrice\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"create-order__container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, this.state.totalPrice && React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"promocode__container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"promocode__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Enter promocode\"), React.createElement(\"input\", {\n      onChange: this.handlePromocode,\n      className: \"promocode__input\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), !this.state.successPromocode && React.createElement(\"button\", {\n      onClick: this.sendPromocode,\n      className: \"promocode__button m_button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Check promocode\"), this.state.incorrectPromocode && React.createElement(\"h6\", {\n      className: \"promocode__incorrect\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Incorrect promocode\"), React.createElement(\"h2\", {\n      className: \"promocode__price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Total price: \", this.state.totalPrice, \" \\u20B4\"))), this.state.cart && !this.state.wasSended && React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"create-order\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"create-order__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Delivery address\"), React.createElement(\"span\", {\n      className: \"create-order__label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Your street\"), React.createElement(\"input\", {\n      onChange: this.handleStreet,\n      className: \"create-order__input\",\n      type: \"text\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"create-order__label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Number\"), React.createElement(\"input\", {\n      onChange: this.handleNumber,\n      className: \"create-order__input\",\n      type: \"text\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"create-order__label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"District\"), React.createElement(\"input\", {\n      onChange: this.handleDistrict,\n      className: \"create-order__input\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"create-order__label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Country\"), React.createElement(\"input\", {\n      onChange: this.handleCountry,\n      className: \"create-order__input\",\n      type: \"text\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"create-order__label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"City\"), React.createElement(\"input\", {\n      onChange: this.handleCity,\n      className: \"create-order__input\",\n      type: \"text\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.sendData,\n      className: \"create-order__button m_button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"\\u0421onfirm the order\"))), this.state.wasSended && React.createElement(\"h1\", {\n      className: \"create-order__wasSended\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Your order has been sent for processing.\"));\n  }\n\n}","map":{"version":3,"sources":["D:/dergachev456/training/projects/nodeJS_mysql_intro/client/src/components/CreateOrder.js"],"names":["React","Component","CreateOrder","state","cart","totalPrice","street","number","district","country","city","promocode","wasSended","incorrectPromocode","successPromocode","handleStreet","event","setState","target","value","handleNumber","handleDistrict","handleCountry","handleCity","handlePromocode","sendPromocode","fetch","method","headers","body","JSON","stringify","then","responce","json","data","newPrice","discount","catch","error","sendData","user_data","localStorage","getItem","user_id","parse","id","address","setItem","componentDidMount","token","Authorization","console","log","props","history","push","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nexport default class CreateOrder extends Component {\r\n    state = {\r\n        cart: null,\r\n        totalPrice: null,\r\n        street: '',\r\n        number: '',\r\n        district: '',\r\n        country: '',\r\n        city: '',\r\n        promocode: '',\r\n        wasSended: false,\r\n        incorrectPromocode: false,\r\n        successPromocode: false,\r\n    }\r\n    handleStreet = (event) => {\r\n        this.setState({ street: event.target.value });\r\n    }\r\n    handleNumber = (event) => {\r\n        this.setState({ number: event.target.value });\r\n    }\r\n    handleDistrict = (event) => {\r\n        this.setState({ district: event.target.value });\r\n    }\r\n    handleCountry = (event) => {\r\n        this.setState({ country: event.target.value });\r\n    }\r\n    handleCity = (event) => {\r\n        this.setState({ city: event.target.value });\r\n    }\r\n    handlePromocode = (event) => {\r\n        this.setState({ promocode: event.target.value });\r\n    }\r\n    componentDidMount() {\r\n\r\n                let token = localStorage.getItem('token');\r\n        let data = `Bearer ${token}`;\r\n        fetch('http://localhost:8080/check-auth', {\r\n            headers: {\r\n                Authorization: data\r\n            }\r\n        })\r\n            .then(responce => console.log(responce))\r\n            .catch(error => {\r\n                this.props.history.push('/login');\r\n            })\r\n\r\n        const cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n        const totalPrice = JSON.parse(localStorage.getItem(\"totalPrice\"))\r\n        this.setState({\r\n            cart: cart,\r\n            totalPrice: totalPrice\r\n        })\r\n    }\r\n    sendPromocode = () => {\r\n        this.setState({ incorrectPromocode: false });\r\n        fetch('http://localhost:8080/promocode', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                promocode: this.state.promocode\r\n            })\r\n        })\r\n            .then(responce => responce.json())\r\n            .then(data => {\r\n                let newPrice = this.state.totalPrice;\r\n                let discount = newPrice / 100 * data.discount;\r\n                newPrice = newPrice - discount;\r\n                this.setState({ totalPrice: newPrice });\r\n                this.setState({ successPromocode: true });\r\n            })\r\n            .catch(error => {\r\n                this.setState({ incorrectPromocode: true });\r\n            })\r\n    }\r\n    sendData = () => {\r\n\r\n        const user_data = localStorage.getItem('user_data');\r\n        const user_id = JSON.parse(user_data).id;\r\n        fetch('http://localhost:8080/create-order', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                address: {\r\n                    street: this.state.street,\r\n                    number: this.state.number,\r\n                    district: this.state.district,\r\n                    city: this.state.city,\r\n                    country: this.state.country\r\n                },\r\n                user_id: user_id,\r\n                cart: this.state.cart,\r\n                totalPrice: this.state.totalPrice\r\n            })\r\n        });\r\n        this.setState({ wasSended: true });\r\n        localStorage.setItem('cart', JSON.stringify([]));\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"create-order__container\">\r\n                {\r\n                    this.state.totalPrice &&\r\n                    <React.Fragment>\r\n                        <div className=\"promocode__container\">\r\n                            <h3 className=\"promocode__title\">Enter promocode</h3>\r\n                            <input onChange={this.handlePromocode} className=\"promocode__input\" type=\"text\" />\r\n                            {\r\n                                !this.state.successPromocode && <button onClick={this.sendPromocode} className=\"promocode__button m_button\">Check promocode</button>\r\n                            }\r\n                            {\r\n                                this.state.incorrectPromocode && <h6 className=\"promocode__incorrect\">Incorrect promocode</h6>\r\n                            }\r\n                            <h2 className=\"promocode__price\">Total price: {this.state.totalPrice} &#8372;</h2>\r\n                        </div>\r\n                    </React.Fragment>\r\n\r\n                }\r\n                {\r\n                    this.state.cart && !this.state.wasSended && (\r\n                        <React.Fragment>\r\n                            <div className=\"create-order\">\r\n                                <h2 className=\"create-order__title\">Delivery address</h2>\r\n                                <span className=\"create-order__label\">Your street</span>\r\n                                <input onChange={this.handleStreet} className=\"create-order__input\" type=\"text\" required />\r\n                                <span className=\"create-order__label\">Number</span>\r\n                                <input onChange={this.handleNumber} className=\"create-order__input\" type=\"text\" required />\r\n                                <span className=\"create-order__label\">District</span>\r\n                                <input onChange={this.handleDistrict} className=\"create-order__input\" type=\"text\" />\r\n                                <span className=\"create-order__label\">Country</span>\r\n                                <input onChange={this.handleCountry} className=\"create-order__input\" type=\"text\" required />\r\n                                <span className=\"create-order__label\">City</span>\r\n                                <input onChange={this.handleCity} className=\"create-order__input\" type=\"text\" required />\r\n                                <button onClick={this.sendData} className=\"create-order__button m_button\">Сonfirm the order</button>\r\n                            </div>\r\n                        </React.Fragment>\r\n                    )\r\n                }\r\n                {\r\n                    this.state.wasSended && <h1 className=\"create-order__wasSended\">Your order has been sent for processing.</h1>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}