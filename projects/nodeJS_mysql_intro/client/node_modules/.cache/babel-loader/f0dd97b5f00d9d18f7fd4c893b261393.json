{"ast":null,"code":"export function sortCart(arr) {\n  var counter = arr.reduce((o, i) => {\n    console.log(o);\n    console.log(i);\n\n    if (!o.hasOwnProperty(Math.trunc(i.id))) {\n      o[Math.trunc(i.id)] = 0;\n    }\n\n    o[Math.trunc(i.id)]++;\n    console.log(o);\n    return o;\n  }, {});\n  var result = Object.keys(counter).map(function (id) {\n    return {\n      id: id,\n      name: counter.name,\n      sum: counter[id]\n    };\n  });\n  return result;\n} // console.log(getCountIds(arr))","map":{"version":3,"sources":["D:/dergachev456/training/projects/nodeJS_mysql_intro/client/src/sortLocalStorage.js"],"names":["sortCart","arr","counter","reduce","o","i","console","log","hasOwnProperty","Math","trunc","id","result","Object","keys","map","name","sum"],"mappings":"AAAA,OAAO,SAASA,QAAT,CAAkBC,GAAlB,EAAuB;AAC1B,MAAIC,OAAO,GAAGD,GAAG,CAACE,MAAJ,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAYH,CAAZ;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;;AAGA,QAAI,CAACD,CAAC,CAACI,cAAF,CAAiBC,IAAI,CAACC,KAAL,CAAWL,CAAC,CAACM,EAAb,CAAjB,CAAL,EAAyC;AACrCP,MAAAA,CAAC,CAACK,IAAI,CAACC,KAAL,CAAWL,CAAC,CAACM,EAAb,CAAD,CAAD,GAAsB,CAAtB;AACH;;AACDP,IAAAA,CAAC,CAACK,IAAI,CAACC,KAAL,CAAWL,CAAC,CAACM,EAAb,CAAD,CAAD;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYH,CAAZ;AAEA,WAAOA,CAAP;AACH,GAZa,EAYX,EAZW,CAAd;AAaA,MAAIQ,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYZ,OAAZ,EAAqBa,GAArB,CAAyB,UAAUJ,EAAV,EAAc;AAChD,WAAO;AACHA,MAAAA,EAAE,EAAEA,EADD;AAEHK,MAAAA,IAAI,EAAEd,OAAO,CAACc,IAFX;AAGHC,MAAAA,GAAG,EAAEf,OAAO,CAACS,EAAD;AAHT,KAAP;AAKH,GANY,CAAb;AAOA,SAAOC,MAAP;AAIH,C,CACD","sourcesContent":["export function sortCart(arr) {\r\n    var counter = arr.reduce((o, i) => {\r\n        console.log(o);\r\n        console.log(i);\r\n        \r\n        \r\n        if (!o.hasOwnProperty(Math.trunc(i.id))) {\r\n            o[Math.trunc(i.id)] = 0;\r\n        }\r\n        o[Math.trunc(i.id)]++;\r\n        console.log(o);\r\n\r\n        return o;\r\n    }, {});\r\n    var result = Object.keys(counter).map(function (id) {\r\n        return {\r\n            id: id,\r\n            name: counter.name,\r\n            sum: counter[id]\r\n        };\r\n    });\r\n    return result;\r\n\r\n\r\n\r\n}\r\n// console.log(getCountIds(arr))"]},"metadata":{},"sourceType":"module"}